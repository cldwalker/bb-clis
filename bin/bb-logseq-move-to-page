#!/usr/bin/env bb
; vim: set filetype=clojure:
; Moves copied text to page with name extracted from block

(deps/add-deps '{:deps {io.github.cldwalker/bb-clis {:git/sha "c5da64153fb29e2f3fa807df4228b6e434f00fcd"}}})
; (deps/add-deps {:deps {'io.github.cldwalker/bb-clis {:local/root (str (fs/parent (fs/parent *file*)))}}})

(ns bb-logseq-move-to-page
  (:require [cldwalker.bb-clis.cli :as cli]
            [cldwalker.bb-clis.cli.logseq :as logseq]
            [babashka.tasks :refer [shell]]))

(defn- move-to-page [block options]
  (let [properties (logseq/block->properties block)
        page-name (properties "name")]
    (when-not page-name
      (println "Error: Name attribute required to move page")
      (System/exit 1))
    (let [file (str (:directory options) "/pages/" page-name ".md")
          block (logseq/properties->block
                 (into {} (remove #(= "name" (key %)) properties)))]
      (spit file block)
      (shell {:in (properties "name")} "pbcopy")
      (println "Page" page-name "written successfully."))))

(defn -main [{:keys [options summary]}]
  (if (:help options)
    (cli/print-summary "" summary)
    (move-to-page (:out (shell {:out :string} "pbpaste")) options)))

(def options
  [["-d" "--directory LOGSEQ-DIR"
    :default-fn (fn [_] (str (System/getenv "HOME") "/code/priv/logseq-notes"))]])

(when (= *file* (System/getProperty "babashka.file"))
  (cli/run-command -main *command-line-args* options))
