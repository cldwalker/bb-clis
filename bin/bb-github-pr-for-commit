#!/usr/bin/env bb
; vim: set filetype=clojure:

(ns bb-github-pr-for-commit
  (:require [clj-http.lite.client :as client]
            [cheshire.core :as json]
            [cldwalker.babashka.util :as util]))

(defn- fetch-response* [commit {:keys [repository token user]}]
  (try
    (client/get (format "https://api.github.com/repos/%s/commits/%s/pulls"
                        repository commit)
                ;; Check https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit to see if this is still in preview
                (cond-> {:headers {"Accept" "application/vnd.github.groot-preview+json"}}
                        (and user token) (assoc :basic-auth [user token])))
    (catch clojure.lang.ExceptionInfo e
      (util/error "Failed to fetch github information" (pr-str {:error (ex-message e)})))))

(defn- fetch-response [commit options]
  (let [{:keys [body]} (fetch-response* commit options)]
    (if-let [url (-> body (json/parse-string true) first :html_url)]
      (do (util/open-url url)
        url)
      (util/error "No github PR found for this commit"))))

(defn -main [{:keys [options arguments summary]}]
  (when (:debug options) (println "Options:" options))
  (if (or (:help options) (empty? arguments))
    (util/print-summary " COMMIT" summary)
    (fetch-response (first arguments) options)))

(def cli-options
  ;; An option with a required argument
  [["-r" "--repository REPO"
    :default-fn util/find-current-user-repo
    :default-desc "Current directory's repository"
    :validate [#(re-find #"\S+/\S+" %) "Must contain a '/'"]]
   ["-d" "--debug"]
   ["-u" "--user USER"
    :default-fn (fn [_x] (System/getenv "GITHUB_USER"))
    :default-desc "$GITHUB_USER"]
   ["-t" "--token TOKEN"
    :default-fn (fn [_x] (System/getenv "GITHUB_OAUTH_TOKEN"))
    :default-desc "$GITHUB_OAUTH_TOKEN"]
   ["-h" "--help"]])

(util/run-command -main *command-line-args* cli-options)
